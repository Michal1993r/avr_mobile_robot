
asd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000138  000001ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000138  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 75 00 	call	0xea	; 0xea <main>
  78:	0c 94 9a 00 	jmp	0x134	; 0x134 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <SendSpiWord>:
  80:	9e bd       	out	0x2e, r25	; 46
  82:	0d b4       	in	r0, 0x2d	; 45
  84:	07 fe       	sbrs	r0, 7
  86:	fd cf       	rjmp	.-6      	; 0x82 <SendSpiWord+0x2>
  88:	8e bd       	out	0x2e, r24	; 46
  8a:	0d b4       	in	r0, 0x2d	; 45
  8c:	07 fe       	sbrs	r0, 7
  8e:	fd cf       	rjmp	.-6      	; 0x8a <SendSpiWord+0xa>
  90:	29 9a       	sbi	0x05, 1	; 5
  92:	29 98       	cbi	0x05, 1	; 5
  94:	08 95       	ret

00000096 <SendSpi>:
  96:	29 98       	cbi	0x05, 1	; 5
  98:	8e bd       	out	0x2e, r24	; 46
  9a:	0d b4       	in	r0, 0x2d	; 45
  9c:	07 fe       	sbrs	r0, 7
  9e:	fd cf       	rjmp	.-6      	; 0x9a <SendSpi+0x4>
  a0:	29 9a       	sbi	0x05, 1	; 5
  a2:	08 95       	ret

000000a4 <InitSpi>:
  a4:	84 b1       	in	r24, 0x04	; 4
  a6:	8e 60       	ori	r24, 0x0E	; 14
  a8:	84 b9       	out	0x04, r24	; 4
  aa:	8c b5       	in	r24, 0x2c	; 44
  ac:	80 65       	ori	r24, 0x50	; 80
  ae:	8c bd       	out	0x2c, r24	; 44
  b0:	8d b5       	in	r24, 0x2d	; 45
  b2:	81 60       	ori	r24, 0x01	; 1
  b4:	8d bd       	out	0x2d, r24	; 45
  b6:	08 95       	ret

000000b8 <USART_Init>:
  b8:	90 93 c5 00 	sts	0x00C5, r25
  bc:	80 93 c4 00 	sts	0x00C4, r24
  c0:	88 e1       	ldi	r24, 0x18	; 24
  c2:	80 93 c1 00 	sts	0x00C1, r24
  c6:	8e e0       	ldi	r24, 0x0E	; 14
  c8:	80 93 c2 00 	sts	0x00C2, r24
  cc:	08 95       	ret

000000ce <USART_Transmit>:
  ce:	90 91 c0 00 	lds	r25, 0x00C0
  d2:	95 ff       	sbrs	r25, 5
  d4:	fc cf       	rjmp	.-8      	; 0xce <USART_Transmit>
  d6:	80 93 c6 00 	sts	0x00C6, r24
  da:	08 95       	ret

000000dc <USART_Receive>:
  dc:	80 91 c0 00 	lds	r24, 0x00C0
  e0:	87 ff       	sbrs	r24, 7
  e2:	fc cf       	rjmp	.-8      	; 0xdc <USART_Receive>
  e4:	80 91 c6 00 	lds	r24, 0x00C6
  e8:	08 95       	ret

000000ea <main>:
  ea:	89 e1       	ldi	r24, 0x19	; 25
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	0e 94 5c 00 	call	0xb8	; 0xb8 <USART_Init>
  f2:	78 94       	sei
  f4:	0e 94 52 00 	call	0xa4	; 0xa4 <InitSpi>
  f8:	24 9a       	sbi	0x04, 4	; 4
  fa:	80 91 b1 00 	lds	r24, 0x00B1
  fe:	81 60       	ori	r24, 0x01	; 1
 100:	80 93 b1 00 	sts	0x00B1, r24
 104:	80 91 b0 00 	lds	r24, 0x00B0
 108:	82 60       	ori	r24, 0x02	; 2
 10a:	80 93 b0 00 	sts	0x00B0, r24
 10e:	80 91 b0 00 	lds	r24, 0x00B0
 112:	80 61       	ori	r24, 0x10	; 16
 114:	80 93 b0 00 	sts	0x00B0, r24
 118:	56 9a       	sbi	0x0a, 6	; 10
 11a:	55 9a       	sbi	0x0a, 5	; 10
 11c:	0e 94 6e 00 	call	0xdc	; 0xdc <USART_Receive>
 120:	c8 2f       	mov	r28, r24
 122:	81 34       	cpi	r24, 0x41	; 65
 124:	19 f4       	brne	.+6      	; 0x12c <main+0x42>
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	0e 94 4b 00 	call	0x96	; 0x96 <SendSpi>
 12c:	8c 2f       	mov	r24, r28
 12e:	0e 94 67 00 	call	0xce	; 0xce <USART_Transmit>
 132:	f4 cf       	rjmp	.-24     	; 0x11c <main+0x32>

00000134 <_exit>:
 134:	f8 94       	cli

00000136 <__stop_program>:
 136:	ff cf       	rjmp	.-2      	; 0x136 <__stop_program>
